name: CI-CD
on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  ORG: <ORG>
  REPO: <REPO>
  NAMESPACE: workspace

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build & Push backend
        uses: docker/build-push-action@v6
        with:
          context: .
          file: backend/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.ORG }}/${{ env.REPO }}-backend:latest
            ${{ env.REGISTRY }}/${{ env.ORG }}/${{ env.REPO }}-backend:${{ github.sha }}
      - name: Build & Push frontend
        uses: docker/build-push-action@v6
        with:
          context: .
          file: frontend/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.ORG }}/${{ env.REPO }}-frontend:latest
            ${{ env.REGISTRY }}/${{ env.ORG }}/${{ env.REPO }}-frontend:${{ github.sha }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4
      - uses: azure/setup-kubectl@v4
      - name: Kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${KUBE_CONFIG_DATA}" | base64 -d > ~/.kube/config
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
      - name: Apply Secrets
        run: |
          kubectl create ns ${NAMESPACE} || true
          cat <<YAML | kubectl apply -f -
          apiVersion: v1
          kind: Secret
          metadata:
            name: backend-secrets
            namespace: ${NAMESPACE}
          stringData:
            API_KEY: "${API_KEY}"
            SLACK_SIGNING_SECRET: "${SLACK_SIGNING_SECRET}"
            SLACK_BOT_TOKEN: "${SLACK_BOT_TOKEN}"
          YAML
        env:
          API_KEY: ${{ secrets.API_KEY }}
          SLACK_SIGNING_SECRET: ${{ secrets.SLACK_SIGNING_SECRET }}
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      - name: Deploy
        run: |
          sed -e "s|<ORG>|${{ env.ORG }}|g" \
              -e "s|<REPO>|${{ env.REPO }}|g" \
              -e "s|<NAMESPACE>|${{ env.NAMESPACE }}|g" \
              -e "s|<DOMAIN>|${{ vars.DOMAIN }}|g" \
              deploy/k8s/backend.yaml | kubectl apply -f -
          sed -e "s|<ORG>|${{ env.ORG }}|g" -e "s|<REPO>|${{ env.REPO }}|g" -e "s|<NAMESPACE>|${{ env.NAMESPACE }}|g" deploy/k8s/frontend.yaml | kubectl apply -f -
          sed -e "s|<NAMESPACE>|${{ env.NAMESPACE }}|g" -e "s|<DOMAIN>|${{ vars.DOMAIN }}|g" deploy/k8s/ingress.yaml | kubectl apply -f -
          kubectl -n ${NAMESPACE} rollout status deploy/backend --timeout=120s || true
          kubectl -n ${NAMESPACE} rollout status deploy/frontend --timeout=120s || true
